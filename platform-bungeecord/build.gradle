plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'com.thoxia.limbosecure'
version = '1.0.0'

repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url "https://storehouse.okaeri.eu/repository/maven-public/" }
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation(parent)

    compileOnly('org.projectlombok:lombok:1.18.26')
    annotationProcessor 'org.projectlombok:lombok:1.18.26'

    compileOnly 'net.md-5:bungeecord-api:1.20-R0.1-SNAPSHOT'

    implementation 'eu.okaeri:okaeri-configs-yaml-bungee:5.0.1'

    compileOnly("net.luckperms:api:5.4")

    compileOnly 'com.github.bivashy.NanoLimboPlugin:api:1.0.6'
    compileOnly 'com.github.bivashy.NanoLimboPlugin:bungee:1.0.6'

    implementation "net.kyori:adventure-api:4.16.0"
    implementation "net.kyori:adventure-platform-bungeecord:4.3.2"
    implementation "net.kyori:adventure-text-minimessage:4.16.0"

    compileOnly ('net.dv8tion:JDA:5.0.0-beta.20') {
        exclude group: "club.minnced", module: "opus-java"
    }

    implementation 'org.bstats:bstats-bungeecord:3.0.2'
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

def targetJavaVersion = 16
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

build {
    dependsOn shadowJar
}

shadowJar {
    dependsOn(jar)

    relocate 'net.dv8tion', 'com.thoxia.limbosecure.thirdparty.net.dv8tion'
    relocate 'eu.okaeri', 'com.thoxia.limbosecure.bungee.thirdparty.eu.okaeri'
    relocate 'net.kyori', 'com.thoxia.limbosecure.bungee.thirdparty.net.kyori'
    relocate 'org.bstats', 'com.thoxia.limbosecure.bungee.thirdparty.org.bstats'

    from sourceSets.getByName("main").output
    configurations = [project.configurations.getByName("runtimeClasspath")]

    archiveFileName = "LimboSecure-Bungee v${project.version}.jar"

    destinationDirectory = file("../out/")
}