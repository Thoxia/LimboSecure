plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'com.thoxia.limbosecure'
version = '1.0.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    implementation(parent) {
        exclude group: "net.dv8tion", module: "JDA"
    }

    compileOnly('org.projectlombok:lombok:1.18.26')
    annotationProcessor 'org.projectlombok:lombok:1.18.26'

    compileOnly "com.destroystokyo.paper:paper-api:1.16.5-R0.1-SNAPSHOT"

    compileOnly("net.luckperms:api:5.4")
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

def targetJavaVersion = 16
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

build {
    dependsOn shadowJar
}

shadowJar {
    dependsOn(jar)

    relocate 'net.dv8tion', 'com.thoxia.limbosecure.thirdparty.net.dv8tion'

    from sourceSets.getByName("main").output
    configurations = [project.configurations.getByName("runtimeClasspath")]

    archiveFileName = "LimboSecure-Spigot v${project.version}.jar"

    destinationDirectory = file("../out/")
}